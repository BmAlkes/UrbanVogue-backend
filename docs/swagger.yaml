openapi: 3.0.0
info:
  title: DotVizion API
  description: API For Controller of Urban Vogue
  version: 1.0.0

servers:
  - url: http://localhost:9000

tags:
  - name: Authentication
    description: Routes of Authentication

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /api/users/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        201:
          description: User registered successfully
        400:
          description: User already exists or invalid data
        500:
          description: Error server

  /api/users/login:
    post:
      summary: Do login of an existing user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: password123
      responses:
        200:
          description: Login successful
        400:
          description: Credentials are invalid
        500:
          description: Error server

  /api/users/profile:
    get:
      summary: Retorna o perfil do usuário autenticado
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        200:
          description: Perfil do usuário retornado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "60f8d6e2c9e77c42d4e6a7f9"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "john@example.com"
                  role:
                    type: string
                    example: "user"
        401:
          description: Não autorizado - Token inválido ou ausente
